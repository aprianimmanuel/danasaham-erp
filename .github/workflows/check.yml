name: Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  check-code:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: [ '3.12' ]
        os: [ ubuntu-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v4

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements.dev.txt

      - name: Run linters
        run: |
          black --check .
          ruff check .

      - name: Run tests
        run: pytest --cov=.

  docker-compose:
    name: Test and Lint using Docker Compose
    runs-on: ubuntu-20.04
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Docker login
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # docker-compose and docker commands
      - name: Set up Docker Compose
        run: |
          cd backend
          docker-compose down -v --rmi all --remove-orphans

      # Rebuild and start the services with Docker Compose
      - name: Rebuild the Docker Container with Docker Compose
        run: |
          cd backend
          docker-compose up -d --build

      # Create and adjust permissions for Custom Temporary Directory mirroring MEDIA_ROOT
      - name: Create Custom Temporary Media Directory and Set Permissions
        run: |
          cd backend
          docker volume rm $(docker volume ls -q -f dangling=true) || true
          docker-compose run --user=root --rm app sh -c "mkdir -p /app/media/test_media && chown -R django-user:django-user /app/media"

      - name: Run Migrations
        run: |
          cd backend
          docker-compose run --rm app sh -c "python manage.py wait_for_db && python manage.py makemigrations && python manage.py wait_for_db && python manage.py migrate"

      # Run tests
      - name: Test
        run: |
          cd backend
          docker-compose run --rm app sh -c "python manage.py test"

      - name: Lint
        run: |
          cd backend
          docker-compose run --rm app sh -c "black --check . && ruff check ."

  dependabot-auto-merge:
    name: 'Dependabot auto merge'
    needs: [ check-code ]
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}  # Detect that the PR author is dependabot
    steps:
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"  # Use GitHub CLI to merge automatically the PR
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
