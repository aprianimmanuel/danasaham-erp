version: "3.9"

x-common: &common
  env_file:
    - .env
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
  networks:
    - main

services:
  app:
    <<: *common
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "${API_PORT}:8000"
    volumes:
      - ./backend:/apps  # Mount the local backend directory to /apps in the container
    command: make run.server.prod
    depends_on:
      - pgbouncer
      - redis
      - rabbitmq

  db:
    <<: *common
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "shared_preload_libraries=pg_trgm"]

  pgbouncer:
    <<: *common
    image: bitnami/pgbouncer:1-debian-12
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - POOL_MODE=transaction
      - MAX_CLIENT_CONN=1000
      - DEFAULT_POOL_SIZE=20
      - MIN_POOL_SIZE=5
      - RESERVE_POOL_SIZE=5
      - RESERVE_POOL_TIMEOUT=5
      - SERVER_RESET_QUERY=DISCARD ALL
      - SERVER_CHECK_QUERY=select 1
      - LOG_CONNECTIONS=1
      - LOG_DISCONNECTIONS=1
      - LOG_POOLER_ERRORS=1
      - STATS_PERIOD=60
      - AUTH_TYPE=md5
    volumes:
      - pgbouncer-data:/var/lib/pgbouncer

  redis:
    <<: *common
    image: redis:7.2.5-bookworm
    restart: unless-stopped
    volumes:
      - redis-data:/data
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru

  rabbitmq:
    <<: *common
    image: rabbitmq:3-management
    restart: unless-stopped
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "${RABBITMQ_DASHBOARD_PORT}:15672"

  celery:
    <<: *common
    build: .
    command: make run.celery.prod
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - .:/application

  migrations:
    <<: *common
    build: .
    command: make migrate
    depends_on:
      - db
    volumes:
      - .:/application

  collectstatic:
    <<: *common
    build: .
    command: make collectstatic
    depends_on:
      - db
    volumes:
      - .:/application

  smtp:
    <<: *common
    build:
      context: .
      args:
        - DEV=true
    command: >
      sh -c "python -m aiosmtpd -n -l 0.0.0.0:8025"
    ports:
      - "8025:8025"
    volumes:
      - ./app:/app

networks:
  main:
    ipam:
      driver: default

volumes:
  dev-db-data:
  pgbouncer-data:
  redis-data:
  rabbitmq-data:
