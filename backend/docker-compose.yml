x-common: &common
  env_file:
    - .env
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
  networks:
    - main

services:
  app:
    <<: *common
    build:
      context: .
    environment:
      WORKERS: ${WORKERS:-2}
      THREADS: ${THREADS:-2}
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "${API_PORT}:8000"
    volumes:
      - .:/apps
      - ./logs/app:/apps/logs/app
    command: ["make", "run.server.prod"]
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 1g
    depends_on:
      - pgbouncer
      - db
      - redis
      - rabbitmq
      - celery

  db:
    <<: *common
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      POSTGRES_INITDB_ARGS: --auth=md5
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1g
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - dev-db-data:/var/lib/postgresql/data

  pgbouncer:
    <<: *common
    image: bitnami/pgbouncer:1-debian-12
    restart: unless-stopped
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 20
      MIN_POOL_SIZE: 5
      RESERVE_POOL_SIZE: 5
      RESERVE_POOL_TIMEOUT: 5
      SERVER_RESET_QUERY: DISCARD ALL
      SERVER_CHECK_QUERY: select 1
      LOG_CONNECTIONS: "1"
      LOG_DISCONNECTIONS: "1"
      LOG_POOLER_ERRORS: "1"
      STATS_PERIOD: "60"
      AUTH_TYPE: md5
    ports:
      - "${PGBOUNCER_PORT}:6432"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512m
    volumes:
      - pgbouncer-data:/var/lib/pgbouncer

  redis:
    <<: *common
    image: redis:7.2.5-bookworm
    restart: unless-stopped
    depends_on:
      - celery
      - rabbitmq
    command: ["redis-server", "/etc/redis/redis.conf"]
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512m
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf

  rabbitmq:
    <<: *common
    image: rabbitmq:3-management
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512m
    ports:
      - "${RABBITMQ_DASHBOARD_PORT}:15672"
      - "${RABBITMQ_PORT}:5672"

  celery:
    <<: *common
    build:
      context: .
    environment:
      DATABASE_URL: ${DATABASE_URL}
      EXTERNAL_DB_HOST: ${EXTERNAL_DB_HOST}
      EXTERNAL_DB_USERNAME: ${EXTERNAL_DB_USERNAME}
      EXTERNAL_DB_DATABASE: ${EXTERNAL_DB_DATABASE}
      EXTERNAL_DB_PORT: ${EXTERNAL_DB_PORT}
      EXTERNAL_DB_PASSWORD: ${EXTERNAL_DB_PASSWORD}
    command: [
      "bash",
      "-c",
      "uv run celery -A tasks.app worker --loglevel=DEBUG --prefetch-multiplier=1",
    ]
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 512m
    depends_on:
      - rabbitmq
    volumes:
      - .:/apps

  collectstatic:
    <<: *common
    build:
      context: .
    environment:
      DATABASE_URL: ${DATABASE_URL}
      EXTERNAL_DB_HOST: ${EXTERNAL_DB_HOST}
      EXTERNAL_DB_USERNAME: ${EXTERNAL_DB_USERNAME}
      EXTERNAL_DB_DATABASE: ${EXTERNAL_DB_DATABASE}
      EXTERNAL_DB_PORT: ${EXTERNAL_DB_PORT}
      EXTERNAL_DB_PASSWORD: ${EXTERNAL_DB_PASSWORD}
    command: [
      "bash",
      "-c",
      "python manage.py collectstatic --noinput",
    ]
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512m
    volumes:
      - .:/apps
      - ./static:/apps/static
      - ./staticfiles:/apps/staticfiles

networks:
  main:
    ipam:
      driver: default

volumes:
  dev-db-data:
  pgbouncer-data:
  redis-data:
  rabbitmq-data: