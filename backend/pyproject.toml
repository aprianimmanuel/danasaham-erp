[tool.black]
line-length = 90

[tool.ruff]
select = ["ALL"]
unfixable = ["T201"]
ignore = [
    "E501",   # Line too long (will be fixed by black)
    "A003",   # Variable name "id" is shadowing a built-in name
    "RUF001", # Unused variable in a f-string
    "ERA001", # Raw f-string is missing format specifier(s)
    "F841",   # Local variable is assigned to but never used

    "ANN101", # Missing type annotation for self in method
    "ANN102", # Missing type annotation for cls in classmethod
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed

    "D10",    # Missing docstring in public module
    "D203",   # 1 blank line required before class docstring
    "D213",   # Multi-line docstring summary should start at the second line
    "EXE002", # Ensure module has a valid __main__.py file

    "PD011",  # Use pandas DataFrame.assign for more readable code

]
show-fixes = true
exclude = [
    "migrations",
    ".venv",
]

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Module imported but unused
"tests/**" = ["S101"]     # Use of assert detected

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
strict = true
implicit_reexport = true
exclude = [
    ".venv",
    "migrations",
]

[tool.pytest.ini_options]
minversion = "7.0"
DJANGO_SETTINGS_MODULE = "app.config.settings"
addopts = "--exitfirst -vv --cov=backend --cov-report=html --cov-fail-under=80"
testpaths = [
    "backend/tests",
]
python_files = "test_*.py *_tests.py"

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/migrations/*"
]
