[project]
name = "danasaham-erp"
version = "0.1.0"
description = "Backend RESTful API berbasis Django yang dirancang untuk mengelola sistem ERP (Enterprise Resource Planning) pada platform Danasaham."
requires-python = ">=3.12"
dependencies = [
    "setuptools",
    "wheel",
    "cachetools",
    "celery",
    "celery-types",
    "colorlog",
    "Django>=3.2.17,<3.2.25",
    "djangorestframework",
    "psycopg2",
    "drf-spectacular",
    "drf-spectacular[sidecar]",
    "django-axes",
    "django-axes[ipware]",
    "django-cors-headers",
    "django-silk",
    "django-split-settings",
    "django-storages",
    "django-redis",
    "django-celery-results",
    "django-celery-results-rest",
    "django-celery-beat",
    "djangorestframework-simplejwt",
    "qrcode",
    "django-allauth",
    "webauthn",
    "PyJWT",
    "python-dotenv",
    "python3-saml",
    "requests",
    "requests-oauthlib",
    "python3-openid",
    "xmlsec",
    "lxml",
    "dj-rest-auth",
    "pandas",
    "openpyxl",
    "scikit-learn",
    "xlrd",
    "pytz",
    "redis",
    "sentry-sdk",
    "gunicorn",
    "typing-extensions",
    "boto3",
    "dj_database_url",
    "SQLAlchemy",
    "sqlalchemy-celery-beat",
    "asgiref",
    "numpy",
    "python-dotenv",
    "srsly",
    "spacy",
    "python-docx",
    "pip",
    "drf-yasg",
]

[tool.uv]
cache-dir = "cache/uv"
dev-dependencies = [
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest-django",
    "ruff",
    "ruff-lsp",
    "black",
    "setuptools-scm",
    "pytest-asyncio",
    "pip-check-updates",
    "coverage",
    "pre-commit",
    "pytest-celery",
]

[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "no-local-version"
write_to = "api/_version.py"

[tool.uv.workspace]
members = ["user"]

[tool.setuptools]
py-modules = []

[tool.black]
line-length = 90

[tool.ruff]
show-fixes = true
line-length = 90
exclude = [
    "migrations",
    ".venv",
]

[tool.ruff.lint]
select = ["ALL"]
unfixable = ["T201"]
ignore = [
    "E501",   # Line too long  # Will be fixed by black
    "A003",
    "RUF001",
    "ERA001",
    "F841",   # Local variable is assigned to but never used

    "ANN101",
    "ANN102",  # Missing type annotation for `cls` in classmethod
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in `{name}`

    "D10",

    "D203",
    "D213",
    "EXE002",

    "PD011",
    "UP040",  # Type alias uses `TypeAlias` annotation instead of the `type` keyword
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",  # Module imported but unused
]
"tests/**" = [
    "S101",  # Use of assert detected
]

[tool.mypy]
python_version = "3.12"
ignore_missing_imports_per_module = true
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
strict = false
implicit_reexport = true
exclude = [
    "venv",
    "migrations",
]

[tool.pytest.ini_options]
minversion = "7.0"
DJANGO_SETTINGS_MODULE = "app.config.settings"
addopts = """
--ds=app.config.settings
--exitfirst
-vv
--cov
--cov-report=html
--cov-report=term-missing
--cov-fail-under=70
--reuse-db
--nomigrations
--disable-warnings
--strict-markers
--tb=short
--log-file=logs/pytest.log
"""
testpaths = ["tests"]
python_files = "tests.py test_*.py *_tests.py"
python_paths = "."
norecursedirs = [".venv", "node_modules", "migrations"]
markers = [
    "slow: menandai test yang lambat",
    "integration: menandai test integrasi",
    "unit: menandai test unit",
    "django_db: untuk test yang akses database"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
asyncio_default_test_loop_scope = "function"
